Hashing passwords are useful to secure user passwords
A password is hashed into an unintelligible string (hash), obfuscating the text form of the password
When a user logs in, this hash is matched with the inputted password to verify the user



Written in PHP
To create a hash from a registration form you must accept a password, hash it, then store it 
EX.
	//Assigns Password to input from form
	$Password = mysqli_escape_string($conn, $_POST['password']);

	//Creates a hash based on the password
	$hash = password_hash($Password, PASSWORD_DEFAULT);

	//Stores user data into database ($UserName defined elsewhere on page)
	$InsertUserCredentialsSQL = "
    		INSERT INTO UserCredentials.tbl_user_cred (atr_username,atr_password,atr_type)
    		VALUES ('" . $UserName . "','" . $hash . "','locked')";

This will insert a user into a MySQL Database, the password being a hash



To verify a password 

	//Assigns Password to input from form
	$Password = mysqli_escape_string($conn,$_POST['password']);
	
	//Assigns hash to the value in the database (assumes row is already set as the MySQL row in DB)
	$hash = $row['atr_password'];
	
	//Verifies Password with hash
	if ( password_verify($Password, $hash) ) { DO SOMETHING } else { DO SOMETHING ELSE }

	
	

